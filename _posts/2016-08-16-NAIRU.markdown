---
layout: post
title:  "How Much Do You Know about NAIRU?"
date:  2016-08-16
categories: ["projects", "D3", "economics"]
---

NAIRU is an acronym for “non-accelerating-inflation rate of unemployment”. Published by the Congressional Budget Office, NAIRU is the theoretical threshold level of unemployment in an economy that does not cause inflation to either rise or fall.


This graph below depicts the historical trends of NAIRU and other related variable.

<script src="https://d3js.org/d3.v4.min.js"></script>
<div id="time-graph"></div>
<script>
var svg = d3.select("#time-graph").append("svg"),
    margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = svg.attr("width") - margin.left - margin.right,
    height = svg.attr("height") - margin.top - margin.bottom,
    g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var parseTime = d3.timeParse("%m-%d-%Y");

var x = d3.scaleTime().range([0, width]),
    y = d3.scaleLinear().range([height, 0]),
    z = d3.scaleOrdinal(d3.schemeCategory10);

var line = d3.line()
    .curve(d3.curveBasis)
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.percentage); });

d3.csv("http://kennylee15.github.io/blog/assets/posts/2016-08-16-NAIRU/fred.csv", type, function(error, data) {
  if (error) throw error;

  var variables = data.columns.slice(1).map(function(id) {
    return {
      id: id,
      values: data.map(function(d) {
        return {date: d.date, percentage: d[id]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(variables, function(c) { return d3.min(c.values, function(d) { return d.percentage; }); }),
    d3.max(variables, function(c) { return d3.max(c.values, function(d) { return d.percentage; }); })
  ]);

  z.domain(variables.map(function(c) { return c.id; }));

  g.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));

  g.append("g")
      .attr("class", "axis axis--y")
      .call(d3.axisLeft(y))
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", "0.71em")
      .attr("fill", "#000")
      .text("percentage, %");

  var variable = g.selectAll(".variable")
    .data(variables)
    .enter().append("g")
      .attr("class", "variable");

  variable.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return z(d.id); });

  variable.append("text")
      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.percentage) + ")"; })
      .attr("x", 3)
      .attr("dy", "0.35em")
      .style("font", "10px sans-serif")
      .text(function(d) { return d.id; });
});

function type(d, _, columns) {
  d.date = parseTime(d.date);
  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];
  return d;
}

</script>